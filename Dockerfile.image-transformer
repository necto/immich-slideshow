# Build stage
FROM rust:1.81 AS builder

WORKDIR /usr/src/app
COPY . .
RUN cargo build --release --bin image-transformer

# Model download stage
FROM python:3.10-slim AS model-builder

WORKDIR /app
COPY conversion/fetch_model.py .

RUN pip install --no-cache-dir tensorflow tensorflow-hub && \
    python fetch_model.py

# Final image for image-transformer
FROM debian:bookworm-slim

RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    imagemagick \
    inotify-tools \
    python3 \
    python3-pip && \
    pip3 install --break-system-packages --no-cache-dir pillow tensorflow-cpu && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY --from=builder /usr/src/app/target/release/image-transformer /app/
COPY --from=model-builder /app/saved_model /app/saved_model
COPY conversion/stylize.py /app/
COPY conversion/convert_image.sh /app/
COPY conversion/dummy_convert_image.sh /app/

# Make the script executable and create style directory
RUN mkdir -p /app/style && chmod +x /app/convert_image.sh

# Set environment variables
ENV STYLE_IMAGE=/app/style/style.jpg
ENV CONVERSION_SCRIPT=/app/convert_image.sh

CMD ["./image-transformer"]
